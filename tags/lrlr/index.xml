<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lrlr on cld4h</title><link>https://cld4h.github.io/tags/lrlr/</link><description>Recent content in lrlr on cld4h</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 17 Sep 2019 19:11:45 +0800</lastBuildDate><atom:link href="https://cld4h.github.io/tags/lrlr/index.xml" rel="self" type="application/rss+xml"/><item><title>Random thoughts</title><link>https://cld4h.github.io/thoughts/</link><pubDate>Thu, 29 Apr 2021 08:23:58 +0800</pubDate><guid>https://cld4h.github.io/thoughts/</guid><description/></item><item><title>Tips</title><link>https://cld4h.github.io/tips/</link><pubDate>Mon, 19 Apr 2021 22:51:56 +0800</pubDate><guid>https://cld4h.github.io/tips/</guid><description>Some Tips</description></item><item><title>Hugo</title><link>https://cld4h.github.io/hugo/</link><pubDate>Wed, 24 Mar 2021 12:14:19 +0800</pubDate><guid>https://cld4h.github.io/hugo/</guid><description>Notes on hugo</description></item><item><title/><link>https://cld4h.github.io/</link><pubDate>Thu, 29 Apr 2021 08:25:00 +0800</pubDate><guid>https://cld4h.github.io/</guid><description>WELCOME!</description></item><item><title>Mass Surveillance</title><link>https://cld4h.github.io/thoughts/mass_surveillance/</link><pubDate>Thu, 29 Apr 2021 08:25:00 +0800</pubDate><guid>https://cld4h.github.io/thoughts/mass_surveillance/</guid><description>什么是&amp;quot;Mass Surveillance&amp;quot; 参见
Mass surveillance is the intricate surveillance of an entire or a substantial fraction of a population in order to monitor that group of citizens.
大规模监控（英語：Mass surveillance，也称为大规模监视或大规模监听）是一种针对全体人口或大多数人口的复杂监控，其目的是掌握民众的行为。
我的观点 无论目的是什么，大规模监控这种手段都是邪恶的。因此大规模监控应当被人唾弃。
马丁・路德・金:
手段代表了在形成之中的理想和进行之中的目的，人们无法通过邪恶的手段来达到美好的目的。因为手段是种子，目的是树。
Edward Snowden:
辩称自己不在乎隐私因为自己没什么需要藏着的，无异于说自己不在乎言论自由因为自己没什么要说的。</description></item><item><title>social control</title><link>https://cld4h.github.io/tags/social-control/</link><pubDate>Thu, 29 Apr 2021 08:25:00 +0800</pubDate><guid>https://cld4h.github.io/tags/social-control/</guid><description/></item><item><title>surveillance</title><link>https://cld4h.github.io/tags/surveillance/</link><pubDate>Thu, 29 Apr 2021 08:25:00 +0800</pubDate><guid>https://cld4h.github.io/tags/surveillance/</guid><description/></item><item><title>Tags</title><link>https://cld4h.github.io/tags/</link><pubDate>Thu, 29 Apr 2021 08:25:00 +0800</pubDate><guid>https://cld4h.github.io/tags/</guid><description/></item><item><title>Links I "consoom"</title><link>https://cld4h.github.io/links/</link><pubDate>Wed, 28 Apr 2021 22:21:40 +0800</pubDate><guid>https://cld4h.github.io/links/</guid><description> Name http rss Luke Smith https://lukesmith.xyz https://lukesmith.xyz/rss.xml Luke Smith (peertube) https://videos.lukesmith.xyz https://lukesmith.xyz/videos Not Related! https://notrelated.xyz/ https://notrelated.xyz/rss 官大為 - Wiwi Kuan https://wiwikuan.com https://wiwikuan.com/index.xml Wiwi.Video 好和弦聯播網 https://wiwi.video https://wiwi.video/feeds/videos.atom?sort=-publishedAt 好檸檬 NiceLemon https://nicelemon.libsyn.com/ http://nicelemon.libsyn.com/rss</description></item><item><title>gravemarks</title><link>https://cld4h.github.io/tags/gravemarks/</link><pubDate>Wed, 21 Apr 2021 21:17:16 +0800</pubDate><guid>https://cld4h.github.io/tags/gravemarks/</guid><description/></item><item><title>markdown</title><link>https://cld4h.github.io/tags/markdown/</link><pubDate>Wed, 21 Apr 2021 21:17:16 +0800</pubDate><guid>https://cld4h.github.io/tags/markdown/</guid><description/></item><item><title>Markdown tips</title><link>https://cld4h.github.io/tips/markdown/</link><pubDate>Wed, 21 Apr 2021 21:17:16 +0800</pubDate><guid>https://cld4h.github.io/tips/markdown/</guid><description>Escape Markdown Fenced Code Blocks Reference
我为了在代码块中打出 ` 符号， 想到了在markdown文本中强行嵌入html。
于是就查找到了这个Raw HTML的方法
但实际上只要用嵌套的 ` 符号 `` ` `` 就行了</description></item><item><title>Raw HTML</title><link>https://cld4h.github.io/hugo/rawhtml/</link><pubDate>Wed, 21 Apr 2021 20:30:32 +0800</pubDate><guid>https://cld4h.github.io/hugo/rawhtml/</guid><description>Reference1
Reference2-escaping shortcode in hugo
创建 layouts/shortcodes/rawhtml.html 文件如下
&amp;lt;!-- raw html --&amp;gt; {{.Inner}} 可以通过如下方式使用
{{&amp;lt; rawhtml &amp;gt;}} &amp;lt;p class=&amp;quot;speshal-fancy-custom&amp;quot;&amp;gt; This is &amp;lt;strong&amp;gt;raw HTML&amp;lt;/strong&amp;gt;, inside Markdown. &amp;lt;/p&amp;gt; {{&amp;lt; /rawhtml &amp;gt;}}</description></item><item><title>rawhtml</title><link>https://cld4h.github.io/tags/rawhtml/</link><pubDate>Wed, 21 Apr 2021 20:30:32 +0800</pubDate><guid>https://cld4h.github.io/tags/rawhtml/</guid><description/></item><item><title>shortcode</title><link>https://cld4h.github.io/tags/shortcode/</link><pubDate>Wed, 21 Apr 2021 20:30:32 +0800</pubDate><guid>https://cld4h.github.io/tags/shortcode/</guid><description/></item><item><title>dollar-bracket</title><link>https://cld4h.github.io/tags/dollar-bracket/</link><pubDate>Wed, 21 Apr 2021 20:00:51 +0800</pubDate><guid>https://cld4h.github.io/tags/dollar-bracket/</guid><description/></item><item><title>Gravemarks vs dollar-bracket</title><link>https://cld4h.github.io/tips/gravemarks-vs-dollar-bracket/</link><pubDate>Wed, 21 Apr 2021 20:00:51 +0800</pubDate><guid>https://cld4h.github.io/tips/gravemarks-vs-dollar-bracket/</guid><description>在shell中，求值可以使用 $() 也可以使用 ` ，哪种更好？
一句话： 尽量使用 $() 而不使用 ` Reference1
Reference2
Reference3</description></item><item><title>shell</title><link>https://cld4h.github.io/tags/shell/</link><pubDate>Wed, 21 Apr 2021 20:00:51 +0800</pubDate><guid>https://cld4h.github.io/tags/shell/</guid><description/></item><item><title>RSS in hugo</title><link>https://cld4h.github.io/hugo/rss/</link><pubDate>Tue, 20 Apr 2021 10:33:50 +0800</pubDate><guid>https://cld4h.github.io/hugo/rss/</guid><description>Official docs Reference
I copied the default RSS template that ships with Hugo and changed line 28.
28c28 &amp;lt; {{ range $pages }} --- &amp;gt; {{ range .Site.Pages }} I added the following line to my layouts/partials/menu-footer.html
&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;{{.Site.BaseURL}}/index.xml&amp;quot;&amp;gt;&amp;lt;i class=&amp;quot;fas fa-rss&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; RSS&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;</description></item><item><title>Start Hugo</title><link>https://cld4h.github.io/hugo/start/</link><pubDate>Wed, 24 Mar 2021 12:18:03 +0800</pubDate><guid>https://cld4h.github.io/hugo/start/</guid><description>First install hugo on your system
Choose a folder to run this command
hugo new site blog cd into your site folder, init a git repo, and add a theme.
In my case I forked the learn theme in case I want to modify it.
I then added the original branch as &amp;ldquo;learn&amp;rdquo; to track new updates.
cd blog git init git submodule add git@github.com:cld4h/hugo-theme-learn.git themes/learn cd themes/learn git remote add -f learn https://github.</description></item><item><title>Beamer</title><link>https://cld4h.github.io/tags/beamer/</link><pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate><guid>https://cld4h.github.io/tags/beamer/</guid><description/></item><item><title>LaTeX</title><link>https://cld4h.github.io/tags/latex/</link><pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate><guid>https://cld4h.github.io/tags/latex/</guid><description/></item><item><title>LaTeX tips</title><link>https://cld4h.github.io/tips/latex/</link><pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate><guid>https://cld4h.github.io/tips/latex/</guid><description>Beamer 在Beamer中插入图片 (可参见Beamer文档12.6节)
figure 环境示例：
\begin{figure} \centering \includegraphics[width=\textwidth]{pic/F1.png} \caption{图中每个方块代表交易，右下角的数字表示交易本身的权重，粗体字表示累积权重。} \label{fig:bef} \end{figure} 为了使图片的caption有数字标号，在导言区加入下述内容：
\setbeamertemplate{caption}[numbered] 从markdown编译Beamer presentation pandoc talk.md -t beamer -o talk.pdf --pdf-engine=xelatex -V mainfont=思源宋体</description></item><item><title>bbencode</title><link>https://cld4h.github.io/tags/bbencode/</link><pubDate>Tue, 17 Sep 2019 19:11:45 +0800</pubDate><guid>https://cld4h.github.io/tags/bbencode/</guid><description/></item><item><title>lrlr</title><link>https://cld4h.github.io/tags/lrlr/</link><pubDate>Tue, 17 Sep 2019 19:11:45 +0800</pubDate><guid>https://cld4h.github.io/tags/lrlr/</guid><description/></item><item><title>lrlr</title><link>https://cld4h.github.io/notes/lrlr/</link><pubDate>Tue, 17 Sep 2019 19:11:45 +0800</pubDate><guid>https://cld4h.github.io/notes/lrlr/</guid><description>题目来源
2019 字节跳动 bytectf crypto lrlr
参考
Team: W&amp;amp;M
Jarvis oj crypto
先全文摘抄大佬的 Write Up 通过old的1000组可以预测python随机数， https://github.com/tna0y/Python-random-module-cracker
一共2轮aes加密，既然密钥可以预测出来，自然就能解密得到clist。
from Crypto.Util.number import getPrime, bytes_to_long, long_to_bytes from Crypto.Cipher import AES import random from randcrack import RandCrack rc = RandCrack() with open(&amp;#39;old&amp;#39;) as file: old = [int(i) for i in file.read().strip().split(&amp;#39;\n&amp;#39;)] index = 0 for i in range(index,624): rc.submit(old[index]) index+=1 for i in range(1000-624): assert(old[index]==rc.predict_getrandbits(32)) index+=1 with open(&amp;#39;cl&amp;#39;) as file: nlist = [eval(i) for i in file.</description></item><item><title>Notes</title><link>https://cld4h.github.io/notes/</link><pubDate>Tue, 17 Sep 2019 19:11:45 +0800</pubDate><guid>https://cld4h.github.io/notes/</guid><description/></item><item><title>Categories</title><link>https://cld4h.github.io/categories/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cld4h.github.io/categories/</guid><description/></item></channel></rss>